/*********************************************************************
 *
 * Filetype: (HEADER)
 *
 * Automatically generated by cflow.filter.pl, Tue Jul 25 11:49:05 2017
 *
 * Copyright -- see file named COPYRIGHTNOTICE
 * 
 *********************************************************************/
#ifndef TEST_FUNCTIONS_PROTOTYPES

#define TEST_FUNCTIONS_PROTOTYPES

#include <stdio.h>

/*
 * ---------------------------------------------------
 * 82 PUBLIC FUNCTION PROTOTYPES FOR TEST_FUNCTIONS.c
 * ---------------------------------------------------
 */
EOS_INTEGER __eos_GetExpandedGrid (EOS_INTEGER nAdd, EOS_INTEGER * nX, EOS_REAL ** X);
void eos_DestroyTableListReverseMap(void);
void eos_SetTableListReverseMap(void);
void display_gEosDataMap_tableHandlesMap_details (void);
int fcmp (EOS_REAL u, EOS_REAL v, EOS_REAL rel_diff, EOS_REAL abs_diff);
void generate_Log10DistributedPoints (EOS_REAL * xList, EOS_REAL * yList, EOS_INTEGER numPts, EOS_REAL xMin,
				      EOS_REAL xMax, EOS_REAL yMin, EOS_REAL yMax);
void generate_RandomPoints (EOS_REAL * xList, EOS_REAL * yList, EOS_INTEGER numPts, EOS_REAL xMin, EOS_REAL xMax,
			    EOS_REAL yMin, EOS_REAL yMax, EOS_BOOLEAN dosort);
int getSamplesLatinHyperCube (int N, EOS_REAL v_lower, EOS_REAL v_upper, EOS_REAL * v);
EOS_INTEGER get_DataType (EOS_INTEGER table, EOS_INTEGER subtable, EOS_INTEGER * type);
EOS_CHAR *get_DataTypeDescription (EOS_INTEGER t);
EOS_CHAR *get_DataTypeDescriptionFromTableHandle (EOS_INTEGER th);
void get_RecordType1_XYF (EOS_INTEGER tableHandle, EOS_REAL ** X, EOS_REAL ** Y, EOS_REAL *** F, EOS_INTEGER * nX,
			  EOS_INTEGER * nY);
void get_UpperLowerBndsRecordType1_XY (EOS_INTEGER tableHandle, EOS_REAL * xMin, EOS_REAL * xMax, EOS_REAL * yMin,
				       EOS_REAL * yMax);
int eos_getFieldValue(EOS_CHAR *str, EOS_CHAR *keyword, EOS_CHAR *oStr);
EOS_CHAR* get_commentStr(EOS_INTEGER matid);
EOS_INTEGER get_creationDate (EOS_INTEGER th);
void get_data (void);
void *get_dataObjects_ptr (void);
EOS_INTEGER get_dataTypeCategory (EOS_INTEGER t);
EOS_INTEGER get_dataTypeDepVar (EOS_INTEGER t);
EOS_CHAR *get_dataTypeDepVar_short_str (EOS_INTEGER t);
EOS_CHAR *get_dataTypeDepVar_str (EOS_INTEGER t);
EOS_INTEGER get_dataTypeIndepVar1 (EOS_INTEGER t);
EOS_CHAR *get_dataTypeIndepVar1_short_str (EOS_INTEGER t);
EOS_CHAR *get_dataTypeIndepVar1_str (EOS_INTEGER t);
EOS_INTEGER get_dataTypeIndepVar2 (EOS_INTEGER t);
EOS_CHAR *get_dataTypeIndepVar2_short_str (EOS_INTEGER t);
EOS_CHAR *get_dataTypeIndepVar2_str (EOS_INTEGER t);
EOS_INTEGER get_dataTypeReference1 (EOS_INTEGER t);
EOS_INTEGER get_dataTypeReference2 (EOS_INTEGER t);
EOS_INTEGER get_dataTypeSubCategory (EOS_INTEGER t);
EOS_INTEGER get_dataTypeSubTable (EOS_INTEGER t);
EOS_INTEGER get_eosDataType (EOS_INTEGER i);
EOS_INTEGER get_eosSubTableNum (EOS_INTEGER i);
EOS_INTEGER get_eosTableNum (EOS_INTEGER i);
void *get_errorCodes_ptr (void);
EOS_INTEGER get_errorCodes_val (EOS_INTEGER i);
EOS_INTEGER get_fileContent (EOS_CHAR * fn, EOS_CHAR ** str);
EOS_CHAR *get_generalOption_flag (EOS_INTEGER i);
EOS_INTEGER get_generalOption_type (EOS_INTEGER i);
EOS_BOOLEAN get_generalOptions_bval (EOS_INTEGER th, EOS_INTEGER i);
EOS_INTEGER get_generalOptions_ival (EOS_INTEGER th, EOS_INTEGER i);
EOS_REAL get_generalOptions_rval (EOS_INTEGER th, EOS_INTEGER i);
EOS_CHAR* get_generalOptions_cval(EOS_INTEGER th, EOS_INTEGER i);
EOS_BOOLEAN get_interpolationOptions_bval (EOS_INTEGER th, EOS_INTEGER optionFlag);
void *get_isHandlePublic_ptr (void);
EOS_INTEGER get_matID (EOS_INTEGER th);
EOS_INTEGER get_matIdList (EOS_INTEGER ** list);
EOS_INTEGER get_matIdListFromFile (EOS_INTEGER ** list, EOS_CHAR * fn);
EOS_INTEGER get_matidFileName (EOS_INTEGER mat, EOS_CHAR ** fn);
EOS_INTEGER get_matidTableInfo (EOS_INTEGER mat, EOS_INTEGER ** tableList, EOS_INTEGER ** tableSize);
EOS_INTEGER get_modificationDate (EOS_INTEGER th);
EOS_INTEGER get_no_alloc (void);
EOS_INTEGER get_no_generalOptions (void);
EOS_INTEGER get_no_handles (void);
EOS_INTEGER get_no_tableOptions (void);
EOS_INTEGER get_no_tables (void);
EOS_CHAR *get_tableHandleFileName (EOS_INTEGER th);
void *get_tableHandlesMap_ptr (void);
EOS_INTEGER get_tableHandlesMap_val (EOS_INTEGER i);
EOS_CHAR *get_tableOption_flag (EOS_INTEGER th, EOS_INTEGER i);
EOS_INTEGER get_tableOption_type (EOS_INTEGER th, EOS_INTEGER i);
EOS_BOOLEAN get_tableOptions_bval (EOS_INTEGER th, EOS_INTEGER i);
EOS_INTEGER get_tableOptions_ival (EOS_INTEGER th, EOS_INTEGER i);
EOS_REAL get_tableOptions_rval (EOS_INTEGER th, EOS_INTEGER i);
EOS_INTEGER get_tableType_FromStr (EOS_CHAR * s);
EOS_INTEGER get_optionFlag_FromStr(EOS_CHAR *s);
EOS_CHAR* get_optionStr_FromFlag(EOS_INTEGER f);
EOS_BOOLEAN isOptionFlagSet(EOS_INTEGER th, EOS_INTEGER flag);
void get_defaultOptionFlags_KeyValue(EOS_CHAR flags_str[][50], EOS_INTEGER *flags, EOS_REAL *flags_val);
void write_defaultOptionFlags_KeyValue(FILE *fp, EOS_CHAR *caller);
EOS_INTEGER get_optionFlags_size();
EOS_INTEGER parse_optionFlags_KeyValue(EOS_CHAR *fn, EOS_INTEGER *flags, EOS_REAL *flags_val,
                                       EOS_INTEGER th_sz, EOS_INTEGER *th, EOS_BOOLEAN verbose);
int split (char *str, char *delim, char ***result);
EOS_CHAR *get_tableType_description (EOS_INTEGER t);
EOS_CHAR *get_tableType_str (EOS_INTEGER t);
void *get_tableTypes_ptr (void);
EOS_INTEGER get_tableTypes_val (EOS_INTEGER i);
EOS_INTEGER get_table_type (EOS_INTEGER th);
EOS_INTEGER get_tableTypesFromSesameTableNumber (EOS_INTEGER tableNum, EOS_INTEGER *tableTypes);
int insensitive_strcmp (const char *cs, const char *ct);
void latinCube (double *vdata, const double *a, const double *b, int nparam, int nlev);
void mt_init (void);
double mt_random (void);
EOS_INTEGER print_FileList (EOS_INTEGER limit, EOS_CHAR * filter);
void print_nr_and_nt (EOS_INTEGER th);
void test_if_globals_are_free (void);

#ifdef _TEST_FUNCTIONS_INTERNAL_PROTOTYPES

/*
 * ---------------------------------------------------
 * 0 PRIVATE FUNCTION PROTOTYPES FOR TEST_FUNCTIONS.c
 * ---------------------------------------------------
 */

#endif /* _TEST_FUNCTIONS_INTERNAL_PROTOTYPES */

#endif /* TEST_FUNCTIONS_PROTOTYPES */
