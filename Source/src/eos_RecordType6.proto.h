/*********************************************************************
 *
 * Filetype: (HEADER)
 *
 * Automatically generated by cflow.filter.pl, Mon Aug 25 16:13:43 2014
 *
 * Copyright -- see file named COPYRIGHTNOTICE
 * 
 *********************************************************************/
#ifndef EOS_RECORDTYPE6_PROTOTYPES

#define EOS_RECORDTYPE6_PROTOTYPES

/*
 * ---------------------------------------------------
 * 1 PUBLIC FUNCTION PROTOTYPES FOR eos_RecordType6.c
 * ---------------------------------------------------
 */
void eos_ConstructRecordType6 (eos_RecordType6 * me, EOS_INTEGER th, EOS_INTEGER materialID);

#ifdef _EOS_RECORDTYPE6_INTERNAL_PROTOTYPES

/*
 * -----------------------------------------------------
 * 28 PRIVATE FUNCTION PROTOTYPES FOR eos_RecordType6.c
 * -----------------------------------------------------
 */
void _eos_GetDataRecordType6 (eos_RecordType6 * me, EOS_REAL ** R, EOS_REAL ** T, EOS_REAL *** F,
			      EOS_INTEGER subTableNum);
EOS_INTEGER _eos_GetNumberOfPhases (void *ptr, EOS_INTEGER * errorCode, EOS_CHAR ** errMsg);
void _eos_InterpolateRecordType6 (void *ptr, EOS_INTEGER th, EOS_INTEGER subTableNum, EOS_INTEGER varOrder,
				  EOS_INTEGER dataType, EOS_INTEGER nXYPairs, EOS_REAL * srchX, EOS_REAL * srchY,
				  EOS_REAL * fVals, EOS_REAL * dFx, EOS_REAL * dFy, EOS_INTEGER * xyBounds,
				  EOS_INTEGER * errorCode);
EOS_INTEGER _eos_maxloc (EOS_REAL * A, EOS_BOOLEAN * M, EOS_INTEGER N);
void eos_ApplyMassFracConstraintsRecordType6 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType,
					      EOS_INTEGER nXYPairs, EOS_REAL * fVals, EOS_INTEGER * errorCode);
void eos_AreMonotonicRequirementsCompatibleRecordType6 (void *ptr, EOS_INTEGER dataType, EOS_INTEGER inX,
							EOS_INTEGER inY, EOS_BOOLEAN * compatible);
void eos_AreSmoothingRequirementsCompatibleRecordType6 (void *me, EOS_INTEGER dataType, EOS_INTEGER makeSmooth,
							EOS_INTEGER makePtSmooth, EOS_BOOLEAN * compatible);
void eos_CheckExtrapRecordType6 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_INTEGER nXYPairs,
				 EOS_REAL * srchX, EOS_REAL * srchY, EOS_INTEGER * xyBounds,
				 EOS_INTEGER * errorCode);
void eos_CreateRecordType6 (void *ptr, EOS_INTEGER th);
void eos_DestroyRecordType6 (void *ptr);
void eos_GetLoadedBulkDataRecordType6 (void *ptr, EOS_REAL * zbar, EOS_REAL * abar, EOS_REAL * dens0,
				       EOS_INTEGER * errorCode);
void eos_GetMonotonicityRecordType6 (void *ptr, EOS_INTEGER dataType, EOS_INTEGER * inX, EOS_INTEGER * inY);
void eos_GetPackedTableRecordType6 (void *ptr, EOS_INTEGER th, EOS_CHAR * packedTable, EOS_INTEGER * err);
void eos_GetPackedTableSizeRecordType6 (void *ptr, EOS_INTEGER th, EOS_INTEGER * packedTableSize,
					EOS_INTEGER * err);
void eos_GetSizeRecordType6 (eos_RecordType6 * me, EOS_INTEGER * NR, EOS_INTEGER * NT);
void eos_GetSmoothingRecordType6 (void *me, EOS_INTEGER dataType, EOS_INTEGER * isSmooth,
				  EOS_INTEGER * isPtSmooth);
void eos_GetTableMetaDataRecordType6 (void *ptr, EOS_INTEGER infoItem, EOS_CHAR *infoStr, EOS_INTEGER *err);
void eos_GetTableInfoRecordType6 (void *ptr, EOS_INTEGER th, EOS_INTEGER numInfoItems, EOS_INTEGER * infoItems,
				  EOS_REAL * infoVals, EOS_INTEGER * err);
void eos_InterpolateRecordType6 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_INTEGER nXYPairs,
				 EOS_REAL * srchX, EOS_REAL * srchY, EOS_REAL * fVals, EOS_REAL * dFx,
				 EOS_REAL * dFy, EOS_INTEGER * xyBounds, EOS_INTEGER * errorCode);
void eos_IsMonotonicRecordType6 (void *ptr, EOS_INTEGER dataType, EOS_BOOLEAN * isMonotonic, EOS_BOOLEAN inX,
				 EOS_BOOLEAN inY, EOS_INTEGER * err);
void eos_LoadRecordType6 (void *ptr, EOS_INTEGER th);
void eos_MakeMonotonicRecordType6 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_BOOLEAN inX,
				   EOS_BOOLEAN inY, EOS_INTEGER * err);
void eos_MakeSmoothRecordType6 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_BOOLEAN ptSmooth,
				EOS_INTEGER * err);
void eos_PrintRecordType6 (void *ptr, EOS_INTEGER th, EOS_CHAR * fname, EOS_INTEGER append, EOS_INTEGER * err);
void eos_SetFileIndexesRecordType6 (void *ptr, EOS_INTEGER th);
void eos_SetMonotonicityRecordType6 (void *ptr, EOS_INTEGER dataType, EOS_INTEGER inX, EOS_INTEGER inY);
void eos_SetPackedTableRecordType6 (void *ptr, EOS_INTEGER th, EOS_CHAR * packedTable, EOS_INTEGER * err);
void eos_SetSizeRecordType6 (eos_RecordType6 * me, EOS_INTEGER NR, EOS_INTEGER NT, EOS_INTEGER NP,
			     EOS_INTEGER tableNum);
void eos_SetSmoothingRecordType6 (void *me, EOS_INTEGER dataType, EOS_INTEGER makeSmooth,
				  EOS_INTEGER makePtSmooth);

#endif /* _EOS_RECORDTYPE6_INTERNAL_PROTOTYPES */

#endif /* EOS_RECORDTYPE6_PROTOTYPES */
