/*********************************************************************
 *
 * Filetype: (HEADER)
 *
 * Automatically generated by cflow.filter.pl, Mon Aug 25 16:13:40 2014
 *
 * Copyright -- see file named COPYRIGHTNOTICE
 * 
 *********************************************************************/
#ifndef EOS_RECORDTYPE3_PROTOTYPES

#define EOS_RECORDTYPE3_PROTOTYPES

/*
 * ---------------------------------------------------
 * 3 PUBLIC FUNCTION PROTOTYPES FOR eos_RecordType3.c
 * ---------------------------------------------------
 */
void eos_ConstructRecordType3 (eos_RecordType3 * me, EOS_INTEGER th, EOS_INTEGER materialID);
void eos_GetSizeRecordType3 (eos_RecordType3 *me, EOS_INTEGER *N);
void _eos_GetDataRecordType3 (eos_RecordType3 *me, EOS_REAL **R, EOS_REAL **T);

#ifdef _EOS_RECORDTYPE3_INTERNAL_PROTOTYPES

/*
 * -----------------------------------------------------
 * 20 PRIVATE FUNCTION PROTOTYPES FOR eos_RecordType3.c
 * -----------------------------------------------------
 */
void eos_AreMonotonicRequirementsCompatibleRecordType3 (void *me, EOS_INTEGER dataType, EOS_INTEGER inX,
							EOS_INTEGER inY, EOS_BOOLEAN * compatible);
void eos_AreSmoothingRequirementsCompatibleRecordType3 (void *me, EOS_INTEGER dataType, EOS_INTEGER makeSmooth,
							EOS_INTEGER makePtSmooth, EOS_BOOLEAN * compatible);
void eos_CreateRecordType3 (void *ptr, EOS_INTEGER th);
void eos_DestroyRecordType3 (void *ptr);
void eos_GetLoadedBulkDataRecordType3 (void *ptr, EOS_REAL * zbar, EOS_REAL * abar, EOS_REAL * dens0,
				       EOS_INTEGER * errorCode);
void eos_GetMonotonicityRecordType3 (void *me, EOS_INTEGER dataType, EOS_INTEGER * inX, EOS_INTEGER * inY);
void eos_GetPackedTableRecordType3 (void *ptr, EOS_INTEGER dataType, EOS_CHAR * packedTable, EOS_INTEGER * err);
void eos_GetPackedTableSizeRecordType3 (void *ptr, EOS_INTEGER th, EOS_INTEGER * packedTableSize,
					EOS_INTEGER * err);
void eos_GetSmoothingRecordType3 (void *me, EOS_INTEGER dataType, EOS_INTEGER * isSmooth,
				  EOS_INTEGER * isPtSmooth);
void eos_GetTableMetaDataRecordType3 (void *ptr, EOS_INTEGER infoItem, EOS_CHAR *infoStr, EOS_INTEGER *err);
void eos_GetTableInfoRecordType3 (void *ptr, EOS_INTEGER th, EOS_INTEGER numInfoItems, EOS_INTEGER * infoItems,
				  EOS_REAL * infoVals, EOS_INTEGER * err);
void eos_IsMonotonicRecordType3 (void *ptr, EOS_INTEGER dataType, EOS_BOOLEAN * isMonotonic, EOS_BOOLEAN inX,
				 EOS_BOOLEAN inY, EOS_INTEGER * err);
void eos_LoadRecordType3 (void *ptr, EOS_INTEGER th);
void eos_MakeMonotonicRecordType3 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_BOOLEAN inX,
				   EOS_BOOLEAN inY, EOS_INTEGER * err);
void eos_MakeSmoothRecordType3 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_BOOLEAN ptSmooth,
				EOS_INTEGER * err);
void eos_PrintRecordType3 (void *ptr, EOS_INTEGER th, EOS_CHAR * fname, EOS_INTEGER append, EOS_INTEGER * err);
void eos_SetFileIndexesRecordType3 (void *ptr, EOS_INTEGER th);
void eos_SetMonotonicityRecordType3 (void *me, EOS_INTEGER dataType, EOS_INTEGER inX, EOS_INTEGER inY);
void eos_SetPackedTableRecordType3 (void *ptr, EOS_INTEGER th, EOS_CHAR * packedTable, EOS_INTEGER * err);
void eos_SetSizeRecordType3 (eos_RecordType3 * me, EOS_INTEGER N);
void eos_SetSmoothingRecordType3 (void *me, EOS_INTEGER dataType, EOS_INTEGER makeSmooth,
				  EOS_INTEGER makePtSmooth);

#endif /* _EOS_RECORDTYPE3_INTERNAL_PROTOTYPES */

#endif /* EOS_RECORDTYPE3_PROTOTYPES */
