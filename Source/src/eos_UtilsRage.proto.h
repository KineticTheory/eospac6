/*********************************************************************
 *
 * Filetype: (HEADER)
 *
 * Automatically generated by cflow.filter.pl, Mon Aug 25 16:13:49 2014
 *
 * Copyright -- see file named COPYRIGHTNOTICE
 * 
 *********************************************************************/
#ifndef EOS_UTILSRAGE_PROTOTYPES

#define EOS_UTILSRAGE_PROTOTYPES

/*
 * -------------------------------------------------
 * 5 PUBLIC FUNCTION PROTOTYPES FOR eos_UtilsRage.c
 * -------------------------------------------------
 */
void _eos_CheckTable (EOS_INTEGER nR, EOS_INTEGER nT, EOS_REAL * R, EOS_REAL * T, EOS_REAL ** P, EOS_REAL ** E,
		      EOS_INTEGER mat, EOS_INTEGER nt401, EOS_INTEGER * table_type, EOS_BOOLEAN * table_good);
void _eos_ConvertUnits (EOS_INTEGER convertFlag, EOS_INTEGER nR, EOS_INTEGER nT, EOS_REAL * R, EOS_REAL * T,
			EOS_REAL ** P, EOS_REAL ** E, EOS_INTEGER nt401, EOS_REAL * p401, EOS_REAL * t401,
			EOS_REAL * rg401, EOS_REAL * rl401, EOS_REAL * eg401, EOS_REAL * el401, EOS_REAL * ag401,
			EOS_REAL * al401, EOS_REAL * avgAtomicNumber401, EOS_REAL * avgAtomicWgt401,
			EOS_REAL * refDensity401, EOS_REAL * adjustVapPres, EOS_INTEGER * err, EOS_CHAR ** errMsg);
void _eos_FixTable (EOS_INTEGER nR, EOS_INTEGER nT, EOS_REAL * R, EOS_REAL * T, EOS_REAL ** P, EOS_REAL ** E,
		    EOS_INTEGER mat, EOS_REAL * cP, EOS_REAL * cE, EOS_INTEGER * nt401,
		    EOS_INTEGER * vaporArrayOffset, EOS_REAL * avgAtomicNumber401, EOS_REAL * avgAtomicWgt401,
		    EOS_REAL * refDensity401, EOS_REAL ** p401, EOS_REAL ** t401, EOS_REAL ** rg401,
		    EOS_REAL ** rl401, EOS_REAL ** eg401, EOS_REAL ** el401, EOS_REAL ** ag401, EOS_REAL ** al401,
		    EOS_INTEGER table_type, EOS_BOOLEAN * found_401, EOS_REAL adjustVapPres, EOS_INTEGER * err,
		    EOS_CHAR ** errMsg);
void _eos_sesame_vapor_crit (EOS_REAL * t, EOS_REAL * p, EOS_REAL * r, EOS_REAL * v, EOS_REAL * e,
			     EOS_INTEGER vapor_num, EOS_REAL * vapor_t, EOS_REAL * vapor_p, EOS_REAL * vapor_vl,
			     EOS_REAL * vapor_el);
void _eos_sesame_vapor_t (EOS_REAL t, EOS_INTEGER vapor_num, EOS_REAL * vapor_p, EOS_REAL * vapor_t,
			  EOS_REAL * vapor_vl, EOS_REAL * vapor_vg, EOS_REAL * vapor_rl, EOS_REAL * vapor_rg,
			  EOS_REAL * vapor_el, EOS_REAL * vapor_eg, EOS_REAL * p, EOS_REAL * rg, EOS_REAL * rl,
			  EOS_REAL * vg, EOS_REAL * vl, EOS_REAL * eg, EOS_REAL * el, EOS_REAL * dedvl);

#ifdef _EOS_UTILSRAGE_INTERNAL_PROTOTYPES

/*
 * ---------------------------------------------------
 * 15 PRIVATE FUNCTION PROTOTYPES FOR eos_UtilsRage.c
 * ---------------------------------------------------
 */
void _eos_RageBiRationalInterp (EOS_INTEGER numZones, EOS_INTEGER numXVals, EOS_INTEGER numYVals,
				EOS_REAL * XValues, EOS_REAL * YValues, EOS_REAL ** FValues,
				EOS_REAL * searchXVals, EOS_REAL * searchYVals, EOS_REAL * searchFVals,
				EOS_REAL * searchDFx, EOS_REAL * searchDFy, EOS_INTEGER * xyBounds,
				EOS_INTEGER * err);
void _eos_RageRationalInterp (EOS_INTEGER nsrch, EOS_INTEGER nData, EOS_REAL * xData, EOS_REAL * fData,
			      EOS_REAL * yvalv, EOS_REAL * fvalv, EOS_REAL * dfvalv, EOS_INTEGER * xyBounds,
			      EOS_INTEGER * err);
void _eos_build_dome (EOS_REAL ** p301, EOS_REAL ** e301, EOS_REAL * r301, EOS_REAL * t301, EOS_INTEGER nr301,
		      EOS_INTEGER nt301, EOS_REAL * avgAtomicNumber401, EOS_REAL * avgAtomicWgt401,
		      EOS_REAL * refDensity401, EOS_INTEGER * nt401, EOS_REAL ** p401, EOS_REAL ** t401,
		      EOS_REAL ** rg401, EOS_REAL ** rl401, EOS_REAL ** eg401, EOS_REAL ** el401,
		      EOS_REAL ** ag401, EOS_REAL ** al401, EOS_INTEGER mat, EOS_REAL * savep, EOS_INTEGER * idome,
		      EOS_REAL tcrit, EOS_REAL pcrit, EOS_REAL rcrit, EOS_REAL ecrit, EOS_BOOLEAN * found_401,
		      EOS_INTEGER * err, EOS_CHAR ** errMsg);
void _eos_find_both_sides (EOS_INTEGER ix, EOS_REAL pfind, EOS_REAL * rfind, EOS_REAL ** p301, EOS_REAL * r301,
			   EOS_REAL * t301, EOS_INTEGER nr301, EOS_INTEGER nt301, EOS_INTEGER iy, EOS_REAL t);
void _eos_find_critical_pt (EOS_REAL ** P, EOS_REAL ** E, EOS_INTEGER nR, EOS_INTEGER nT, EOS_REAL * R,
			    EOS_REAL * T, EOS_INTEGER mat, EOS_REAL * savep, EOS_INTEGER * idome, EOS_REAL * tcrit,
			    EOS_REAL * pcrit, EOS_REAL * rhoc, EOS_REAL * ecrit, EOS_INTEGER * err);
void _eos_find_hi_side (EOS_REAL pfind, EOS_REAL * rfind, EOS_REAL ** p301, EOS_REAL * r301, EOS_REAL * t301,
			EOS_INTEGER nr301, EOS_INTEGER nt301, EOS_INTEGER iy, EOS_REAL t);
void _eos_find_low_side (EOS_INTEGER j, EOS_REAL pfind, EOS_REAL * rfind, EOS_REAL ** p301, EOS_REAL * r301,
			 EOS_REAL * t301, EOS_INTEGER nr301, EOS_INTEGER nt301, EOS_INTEGER iy, EOS_REAL t);
void _eos_find_notpos (EOS_REAL ** p301, EOS_INTEGER nR, EOS_INTEGER j, EOS_INTEGER * iloc, EOS_INTEGER * err);
void _eos_find_realp (EOS_REAL ** p301, EOS_INTEGER nR, EOS_INTEGER j, EOS_INTEGER * ireturn);
void _eos_integrate (EOS_REAL pfind, EOS_INTEGER * ifail, EOS_INTEGER niter, EOS_REAL rho1, EOS_REAL rho2,
		     EOS_REAL ** p301, EOS_REAL * r301, EOS_REAL * t301, EOS_INTEGER nr301, EOS_INTEGER nt301,
		     EOS_REAL t, EOS_INTEGER iy, EOS_REAL * pmin, EOS_REAL * pmax);
void _eos_remove_patch (EOS_REAL ** p301, EOS_REAL * r301, EOS_INTEGER * k, EOS_INTEGER j, EOS_INTEGER imax);
void _eos_sesame_fit2_c (EOS_INTEGER code, EOS_INTEGER num, EOS_REAL * x, EOS_REAL * y, EOS_REAL * c);
void _eos_sesame_vapor_build (EOS_REAL ** P, EOS_REAL ** E, EOS_INTEGER nR, EOS_INTEGER nT, EOS_REAL * R,
			      EOS_REAL * T, EOS_REAL * V, EOS_BOOLEAN * build301, EOS_INTEGER mat,
			      EOS_INTEGER * nt401, EOS_REAL * avgAtomicNumber401, EOS_REAL * avgAtomicWgt401,
			      EOS_REAL * refDensity401, EOS_REAL ** p401, EOS_REAL ** t401, EOS_REAL ** rg401,
			      EOS_REAL ** rl401, EOS_REAL ** eg401, EOS_REAL ** el401, EOS_REAL ** ag401,
			      EOS_REAL ** al401, EOS_INTEGER * num_vapor, EOS_INTEGER table_type,
			      EOS_REAL ** vapor_t, EOS_REAL ** vapor_p, EOS_REAL ** vapor_rl, EOS_REAL ** vapor_rg,
			      EOS_REAL ** vapor_vl, EOS_REAL ** vapor_vg, EOS_REAL ** vapor_el,
			      EOS_REAL ** vapor_eg, EOS_BOOLEAN * found_401, EOS_INTEGER * irlo301,
			      EOS_INTEGER * irhi301, EOS_REAL adjustVapPres, EOS_INTEGER * err,
			      EOS_CHAR ** errMsg);
void _eos_store_dome (EOS_INTEGER * ifound, EOS_REAL * domet, EOS_REAL * foundp, EOS_REAL * foundr1,
		      EOS_REAL * foundr2, EOS_REAL * founde1, EOS_REAL * founde2, EOS_REAL * r301, EOS_REAL * t301,
		      EOS_INTEGER nr301, EOS_INTEGER nt301, EOS_REAL ** p301, EOS_REAL ** e301, EOS_REAL pfind,
		      EOS_REAL t, EOS_REAL * rho1, EOS_REAL * rho2);
void rational_func_int (EOS_REAL x, EOS_REAL y, EOS_REAL * tbls, EOS_INTEGER ifn, EOS_REAL * z, EOS_REAL * dzdx,
			EOS_REAL * dzdy, EOS_INTEGER locx, EOS_INTEGER ix, EOS_INTEGER nx, EOS_INTEGER locy,
			EOS_INTEGER iy, EOS_INTEGER ny, EOS_INTEGER locz, EOS_INTEGER nz);

#endif /* _EOS_UTILSRAGE_INTERNAL_PROTOTYPES */

#endif /* EOS_UTILSRAGE_PROTOTYPES */
