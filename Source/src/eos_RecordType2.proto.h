/*********************************************************************
 *
 * Filetype: (HEADER)
 *
 * Automatically generated by cflow.filter.pl, Mon Aug 25 16:13:39 2014
 *
 * Copyright -- see file named COPYRIGHTNOTICE
 * 
 *********************************************************************/
#ifndef EOS_RECORDTYPE2_PROTOTYPES

#define EOS_RECORDTYPE2_PROTOTYPES

/*
 * ---------------------------------------------------
 * 4 PUBLIC FUNCTION PROTOTYPES FOR eos_RecordType2.c
 * ---------------------------------------------------
 */
void eos_ConstructRecordType2 (eos_RecordType2 * me, EOS_INTEGER th, EOS_INTEGER materialID);
void eos_GetPackedTableRecordType2 (void *ptr, EOS_INTEGER th, EOS_CHAR * packedTable, EOS_INTEGER * err);
void eos_GetPackedTableSizeRecordType2 (void *ptr, EOS_INTEGER th, EOS_INTEGER * packedTableSize,
					EOS_INTEGER * err);
void eos_SetPackedTableRecordType2 (void *ptr, EOS_INTEGER th, EOS_CHAR * packedTable, EOS_INTEGER * err);

#ifdef _EOS_RECORDTYPE2_INTERNAL_PROTOTYPES

/*
 * -----------------------------------------------------
 * 20 PRIVATE FUNCTION PROTOTYPES FOR eos_RecordType2.c
 * -----------------------------------------------------
 */
void _eos_GetDataRecordType2 (eos_RecordType2 * me, EOS_REAL ** T, EOS_REAL ** F, EOS_INTEGER subTableNum);
void eos_AreMonotonicRequirementsCompatibleRecordType2 (void *ptr, EOS_INTEGER dataType, EOS_INTEGER inX,
							EOS_INTEGER inY, EOS_BOOLEAN * compatible);
void eos_AreSmoothingRequirementsCompatibleRecordType2 (void *me, EOS_INTEGER dataType, EOS_INTEGER makeSmooth,
							EOS_INTEGER makePtSmooth, EOS_BOOLEAN * compatible);
void eos_CheckExtrapRecordType2 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_INTEGER nXYPairs,
				 EOS_REAL * srchX, EOS_REAL * srchY, EOS_INTEGER * xyBounds,
				 EOS_INTEGER * errorCode);
void eos_CreateRecordType2 (void *ptr, EOS_INTEGER th);
void eos_DestroyRecordType2 (void *ptr);
void eos_GetLoadedBulkDataRecordType2 (void *ptr, EOS_REAL * zbar, EOS_REAL * abar, EOS_REAL * dens0,
				       EOS_INTEGER * errorCode);
void eos_GetMonotonicityRecordType2 (void *ptr, EOS_INTEGER dataType, EOS_INTEGER * inX, EOS_INTEGER * inY);
void eos_GetSmoothingRecordType2 (void *me, EOS_INTEGER dataType, EOS_INTEGER * isSmooth,
				  EOS_INTEGER * isPtSmooth);
void eos_GetTableMetaDataRecordType2 (void *ptr, EOS_INTEGER infoItem, EOS_CHAR *infoStr, EOS_INTEGER *err);
void eos_GetTableInfoRecordType2 (void *ptr, EOS_INTEGER th, EOS_INTEGER numInfoItems, EOS_INTEGER * infoItems,
				  EOS_REAL * infoVals, EOS_INTEGER * err);
void eos_InterpolateRecordType2 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_INTEGER nXYPairs,
				 EOS_REAL * srchX, EOS_REAL * srchY, EOS_REAL * fVals, EOS_REAL * dFx,
				 EOS_REAL * dFy, EOS_INTEGER * xyBounds, EOS_INTEGER * errorCode);
void eos_IsMonotonicRecordType2 (void *ptr, EOS_INTEGER dataType, EOS_BOOLEAN * isMonotonic, EOS_BOOLEAN inX,
				 EOS_BOOLEAN inY, EOS_INTEGER * err);
void eos_LoadRecordType2 (void *ptr, EOS_INTEGER th);
void eos_MakeMonotonicRecordType2 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_BOOLEAN inX,
				   EOS_BOOLEAN inY, EOS_INTEGER * err);
void eos_MakeSmoothRecordType2 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_BOOLEAN ptSmooth,
				EOS_INTEGER * err);
void eos_PrintRecordType2 (void *ptr, EOS_INTEGER th, EOS_CHAR * fname, EOS_INTEGER append, EOS_INTEGER * err);
void eos_SetFileIndexesRecordType2 (void *ptr, EOS_INTEGER th);
void eos_SetMonotonicityRecordType2 (void *ptr, EOS_INTEGER dataType, EOS_INTEGER inX, EOS_INTEGER inY);
void eos_SetSizeRecordType2 (eos_RecordType2 * me, EOS_INTEGER NT);
void eos_SetSmoothingRecordType2 (void *me, EOS_INTEGER dataType, EOS_INTEGER makeSmooth,
				  EOS_INTEGER makePtSmooth);

#endif /* _EOS_RECORDTYPE2_INTERNAL_PROTOTYPES */

#endif /* EOS_RECORDTYPE2_PROTOTYPES */
