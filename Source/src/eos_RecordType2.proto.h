/*********************************************************************
 *
 * Filetype: (HEADER)
 *
 * Automatically generated by cflow.filter.pl, Mon Oct 22 16:32:09 2018
 *
 * Copyright -- see file named COPYRIGHTNOTICE
 * 
 *********************************************************************/
#ifndef EOS_RECORDTYPE2_PROTOTYPES

#define EOS_RECORDTYPE2_PROTOTYPES

/*
 * ---------------------------------------------------
 * 7 PUBLIC FUNCTION PROTOTYPES FOR eos_RecordType2.c
 * ---------------------------------------------------
 */
void _eos_GetDataRecordType2 (eos_RecordType2 *me, EOS_REAL **T, EOS_REAL **F, eos_HashTable1D** F_ht, EOS_INTEGER subTableNum);
void eos_GetSizeRecordType2 (eos_RecordType2 *me, EOS_INTEGER *NT);
void eos_ConstructRecordType2 (eos_RecordType2 *me, EOS_INTEGER th, EOS_INTEGER materialID);
void eos_GetPackedTableRecordType2 (void *ptr, EOS_INTEGER th, EOS_CHAR *packedTable, EOS_INTEGER *err);
void eos_GetPackedTableSizeRecordType2 (void *ptr, EOS_INTEGER th, EOS_INTEGER *packedTableSize, EOS_INTEGER *err);
void eos_SetPackedTableRecordType2 (void *ptr, EOS_INTEGER th, EOS_CHAR *packedTable, EOS_INTEGER *err);

#ifdef DO_OFFLOAD
EOS_INTEGER eos_GpuOffloadDataRecordType2(void *ptr, EOS_INTEGER th);
#endif /* DO_OFFLOAD */

#ifdef _EOS_RECORDTYPE2_INTERNAL_PROTOTYPES

/*
 * -----------------------------------------------------
 * 19 PRIVATE FUNCTION PROTOTYPES FOR eos_RecordType2.c
 * -----------------------------------------------------
 */
void eos_AreMonotonicRequirementsCompatibleRecordType2 (void *ptr, EOS_INTEGER dataType, EOS_INTEGER inX, EOS_INTEGER inY, EOS_BOOLEAN *compatible);
void eos_AreSmoothingRequirementsCompatibleRecordType2 (void *me, EOS_INTEGER dataType, EOS_INTEGER makeSmooth, EOS_INTEGER makePtSmooth, EOS_BOOLEAN *compatible);
void eos_CreateRecordType2 (void *ptr, EOS_INTEGER th);
void eos_DestroyRecordType2 (void* ptr);
void eos_GetLoadedBulkDataRecordType2 (void *ptr, EOS_REAL *zbar, EOS_REAL *abar, EOS_REAL *dens0, EOS_INTEGER *errorCode);
void eos_GetMonotonicityRecordType2 (void *ptr, EOS_INTEGER dataType, EOS_INTEGER *inX, EOS_INTEGER *inY);
void eos_GetSmoothingRecordType2 (void *me, EOS_INTEGER dataType, EOS_INTEGER *isSmooth, EOS_INTEGER *isPtSmooth);
void eos_GetTableInfoRecordType2 (void *ptr, EOS_INTEGER th, EOS_INTEGER numInfoItems, EOS_INTEGER *infoItems, EOS_REAL *infoVals, EOS_INTEGER *err);
void eos_GetTableMetaDataRecordType2 (void *ptr, EOS_INTEGER infoItem, EOS_CHAR *infoStr, EOS_INTEGER *err);
void eos_IsMonotonicRecordType2 (void *ptr, EOS_INTEGER dataType, EOS_BOOLEAN *isMonotonic, EOS_BOOLEAN inX, EOS_BOOLEAN inY, EOS_INTEGER *err);
void eos_LoadRecordType2 (void *ptr, EOS_INTEGER th);
void eos_MakeMonotonicRecordType2 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_BOOLEAN inX, EOS_BOOLEAN inY, EOS_INTEGER *err);
void eos_MakeSmoothRecordType2 (void *ptr, EOS_INTEGER th, EOS_INTEGER dataType, EOS_BOOLEAN ptSmooth, EOS_INTEGER *err);
void eos_PrintRecordType2 (void *ptr, EOS_INTEGER th, EOS_CHAR *fname, EOS_INTEGER append, EOS_INTEGER *err);
void eos_SetFileIndexesRecordType2 (void *ptr, EOS_INTEGER th);
void eos_SetMonotonicityRecordType2 (void *ptr, EOS_INTEGER dataType, EOS_INTEGER inX, EOS_INTEGER inY);
void eos_SetSizeRecordType2 (eos_RecordType2 *me, EOS_INTEGER NT);
void eos_SetSmoothingRecordType2 (void *me, EOS_INTEGER dataType, EOS_INTEGER makeSmooth, EOS_INTEGER makePtSmooth);
EOS_BOOLEAN eos_isRequiredDataLoadedRecordType2 (void *ptr, EOS_INTEGER dataType);
void eos_GenerateHashTablesRecordType2(void *ptr);

#endif /* _EOS_RECORDTYPE2_INTERNAL_PROTOTYPES */

#endif /* EOS_RECORDTYPE2_PROTOTYPES */
