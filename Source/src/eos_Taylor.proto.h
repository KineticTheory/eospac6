/*********************************************************************
 *
 * Filetype: (HEADER)
 *
 * Automatically generated by cflow.filter.pl, Mon Aug 25 16:13:45 2014
 *
 * Copyright -- see file named COPYRIGHTNOTICE
 * 
 *********************************************************************/
#ifndef EOS_TAYLOR_PROTOTYPES

#define EOS_TAYLOR_PROTOTYPES

/*
 * ----------------------------------------------
 * 5 PUBLIC FUNCTION PROTOTYPES FOR eos_Taylor.c
 * ----------------------------------------------
 */
eos_Taylor *_eos_Create1DTaylor (EOS_INTEGER n);
eos_Taylor *_eos_Create2DTaylor (EOS_INTEGER nx, EOS_INTEGER ny);
EOS_INTEGER eos_Load1DTaylor (eos_Data * me, ses_material_id mid, ses_table_id tid, EOS_INTEGER subTableNum,
			      EOS_REAL ** TX, EOS_INTEGER * M, eos_Taylor *** T);
EOS_INTEGER eos_Load2DTaylor (eos_Data * me, ses_material_id mid, ses_table_id tid, EOS_INTEGER subTableNum,
			      EOS_REAL ** TX, EOS_REAL ** TY, EOS_INTEGER * M, EOS_INTEGER * N, eos_Taylor *** T);
void eos_PrintTaylorCoefficients (eos_Taylor ** T, EOS_INTEGER M, EOS_INTEGER N, EOS_INTEGER dataType, FILE * fh);

#ifdef _EOS_TAYLOR_INTERNAL_PROTOTYPES

/*
 * ------------------------------------------------
 * 25 PRIVATE FUNCTION PROTOTYPES FOR eos_Taylor.c
 * ------------------------------------------------
 */
void _eos_AllocateArray (EOS_INTEGER M, EOS_INTEGER N, EOS_REAL *** f);
EOS_INTEGER _eos_DestroyCommonTaylorInfo (EOS_COMMON_TAYLOR_INFO ** me);
void _eos_DestroyTaylor (void *ptr);
void _eos_Evaluate1DTaylorDerivativeArray (void *ptr, EOS_INTEGER nux, EOS_INTEGER nuy, EOS_INTEGER M,
					   EOS_INTEGER N, EOS_REAL * x, EOS_REAL * y);
EOS_REAL _eos_Evaluate1DTaylorDerivativeScalar (void *ptr, EOS_INTEGER nux, EOS_INTEGER nuy, EOS_REAL x,
						EOS_REAL y);
void _eos_Evaluate1DTaylorValueArray (void *ptr, EOS_INTEGER M, EOS_INTEGER N, EOS_REAL * x, EOS_REAL * y);
EOS_REAL _eos_Evaluate1DTaylorValueScalar (void *ptr, EOS_REAL x, EOS_REAL y);
void _eos_Evaluate2DTaylorDerivativeArray (void *ptr, EOS_INTEGER nux, EOS_INTEGER nuy, EOS_INTEGER M,
					   EOS_INTEGER N, EOS_REAL * x, EOS_REAL * y);
EOS_REAL _eos_Evaluate2DTaylorDerivativeScalar (void *ptr, EOS_INTEGER nux, EOS_INTEGER nuy, EOS_REAL x,
						EOS_REAL y);
void _eos_Evaluate2DTaylorValueArray (void *ptr, EOS_INTEGER M, EOS_INTEGER N, EOS_REAL * x, EOS_REAL * y);
EOS_REAL _eos_Evaluate2DTaylorValueScalar (void *ptr, EOS_REAL x, EOS_REAL y);
EOS_INTEGER _eos_GetNextArray_i (ses_file_handle sesFile, EOS_INTEGER ** a, EOS_INTEGER * asize);
EOS_INTEGER _eos_GetNextArray_r (ses_file_handle sesFile, EOS_REAL ** a, EOS_INTEGER * asize);
EOS_REAL **_eos_GetTaylorCoefficients (void *ptr);
void _eos_Init0DTaylor (eos_Taylor * me);
void _eos_Init1DTaylor (eos_Taylor * me, EOS_INTEGER n);
void _eos_Init2DTaylor (eos_Taylor * me, EOS_INTEGER nx, EOS_INTEGER ny);
void _eos_Print1DTaylorCoefficients (void *ptr, EOS_INTEGER dataType, FILE * fh);
void _eos_Print2DTaylorCoefficients (void *ptr, EOS_INTEGER dataType, FILE * fh);
void _eos_Set1DTaylorCoefficients (void *ptr, EOS_REAL ** C);
void _eos_Set1DTaylorIntervals (void *ptr, EOS_REAL * tx, EOS_REAL * ty);
void _eos_Set2DTaylorCoefficients (void *ptr, EOS_REAL ** C);
void _eos_Set2DTaylorIntervals (void *ptr, EOS_REAL * tx, EOS_REAL * ty);
EOS_COMMON_TAYLOR_INFO *_eos_getCommonTaylorInfo (eos_Data * me, ses_material_id mid, ses_table_id tid,
						  EOS_INTEGER * err);
EOS_REAL _eos_horner (eos_Taylor * me, EOS_REAL x, EOS_REAL * b, EOS_INTEGER N, EOS_INTEGER nu);

#endif /* _EOS_TAYLOR_INTERNAL_PROTOTYPES */

#endif /* EOS_TAYLOR_PROTOTYPES */
