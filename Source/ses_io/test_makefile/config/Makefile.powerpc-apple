#-*-makefile-*-###################################################
#  
#  Copyright -- see file named COPYRIGHTNOTICE
#  
##################################################################
### This file contains the following:                          ###
### Platform-dependent system configuration for an ARCH value  ###
### containing the following pattern:                          ###
###    powerpc-apple
##################################################################
#
# GMSL 1.0.11 function dependencies exist (see $(BASEDIR)/config/gmsl).
#
# IBM PowerPC and MacOS

##################################################################
# Compiler suite configurations based upon F90                 ###
##################################################################
# Default: use the first F90 compiler found from F90_List
F90_List = f90 xlf90 gfortran
F90 = $(firstword $(notdir $(foreach compiler,$(F90_List),$(call pathsearch,$(compiler)))))
ifeq ($(strip $(F90)),)
  $(error No supported Fortran compiler was found in your PATH for this machine. (supported: $(F90_List)))
endif

ifeq ($(strip $(F90)),f90)
  F77 = $(ABSOFT)/bin/f77
  F90 = $(ABSOFT)/bin/f90
  ALT_SUBDIR := /$(notdir $(F90))
  _F90FLAGS += -p$(INCDIR) -YCFRL=1
endif

ifeq ($(strip $(F90)),xlf90)
###
### This is a very specific configuration for a PowerPC with gcc, xlf and xlf90
###
  F77 = xlf
  _F90FLAGS += -qfloat=nomaf -qsuffix=f=f90
  _FFLAGS += -qfloat=nomaf -qfixed -qsuffix=f=f
  ALT_SUBDIR := /$(notdir $(F90))
  F77_LIBS += -lSystemStubs
  F90_LIBS += -lSystemStubs
  XLFINSTALL_LOC = $(shell dirname $(dir $(call pathsearch,$(F90))))
  XLFENTRY_LOC = $(shell find $(XLFINSTALL_LOC) -name xlfentry)
  ### The VERSION_FLAG hash not used for xlf compilers' version options
  _F90_VERSION = what $(XLFENTRY_LOC) | grep 'ersion [0-9]'
  _F77_VERSION = what $(XLFENTRY_LOC) | grep 'ersion [0-9]'
endif

ifeq ($(strip $(F90)),gfortran)
  F77 = gfortran
  ALT_SUBDIR := /$(notdir $(F90))
endif

##################################################################
### Assign values to associative arrays, which hold various    ###
### compiler options -- specific to this architecture.         ###
##################################################################
#
### VERSION_FLAG{$CC} = $flag
#
### VERSION_FLAG{$CXX} = $flag
#
### VERSION_FLAG{$F77} = $flag
$(call set,VERSION_FLAG,f77,-V)   # Absoft
#
### VERSION_FLAG{$F90} = $flag

# Set additional compiler-specific options
_CFLAGS += $(call get,_COMP_FLAGS,$(CC))
_CXXFLAGS += $(call get,_COMP_FLAGS,$(CXX))
_FFLAGS += $(call get,_COMP_FLAGS,$(F77))
_F90FLAGS += $(call get,_COMP_FLAGS,$(F90))
